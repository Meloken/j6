user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    # Temel ayarlar
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # MIME türleri
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Günlükleme
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip sıkıştırma
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
    
    # Upstream sunucular (API)
    upstream api_backend {
        least_conn;
        server api1.example.com:3000;
        server api2.example.com:3000;
        server api3.example.com:3000;
        keepalive 32;
    }
    
    # Upstream sunucular (Socket.IO)
    upstream socket_backend {
        ip_hash; # Aynı IP'den gelen istekleri aynı sunucuya yönlendir (sticky session)
        server socket1.example.com:3001;
        server socket2.example.com:3001;
        server socket3.example.com:3001;
        keepalive 32;
    }
    
    # Upstream sunucular (Mediasoup)
    upstream mediasoup_backend {
        least_conn;
        server mediasoup1.example.com:3002;
        server mediasoup2.example.com:3002;
        server mediasoup3.example.com:3002;
        keepalive 32;
    }
    
    # Ana sunucu (API)
    server {
        listen 80;
        listen [::]:80;
        server_name api.seslisohbet.com;
        
        # HTTP -> HTTPS yönlendirmesi
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Ana sunucu (API - HTTPS)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.seslisohbet.com;
        
        # SSL sertifikaları
        ssl_certificate /etc/letsencrypt/live/api.seslisohbet.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.seslisohbet.com/privkey.pem;
        
        # SSL ayarları
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Güvenlik başlıkları
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # API proxy
        location /api/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # Sağlık kontrolü
        location /health {
            proxy_pass http://api_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Hazırlık kontrolü
        location /ready {
            proxy_pass http://api_backend/ready;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Socket.IO sunucusu
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name socket.seslisohbet.com;
        
        # SSL sertifikaları
        ssl_certificate /etc/letsencrypt/live/socket.seslisohbet.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/socket.seslisohbet.com/privkey.pem;
        
        # SSL ayarları
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Güvenlik başlıkları
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # CORS başlıkları
        add_header 'Access-Control-Allow-Origin' 'https://seslisohbet.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        
        # Socket.IO proxy
        location / {
            proxy_pass http://socket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
            proxy_read_timeout 86400s; # 24 saat
            proxy_send_timeout 86400s; # 24 saat
            proxy_connect_timeout 75s;
        }
        
        # Sağlık kontrolü
        location /health {
            proxy_pass http://socket_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Mediasoup sunucusu
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name mediasoup.seslisohbet.com;
        
        # SSL sertifikaları
        ssl_certificate /etc/letsencrypt/live/mediasoup.seslisohbet.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mediasoup.seslisohbet.com/privkey.pem;
        
        # SSL ayarları
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Güvenlik başlıkları
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # CORS başlıkları
        add_header 'Access-Control-Allow-Origin' 'https://seslisohbet.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        
        # Mediasoup proxy
        location / {
            proxy_pass http://mediasoup_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
            proxy_read_timeout 86400s; # 24 saat
            proxy_send_timeout 86400s; # 24 saat
            proxy_connect_timeout 75s;
        }
        
        # Sağlık kontrolü
        location /health {
            proxy_pass http://mediasoup_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Web uygulaması
    server {
        listen 80;
        listen [::]:80;
        server_name seslisohbet.com www.seslisohbet.com;
        
        # HTTP -> HTTPS yönlendirmesi
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Web uygulaması (HTTPS)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name seslisohbet.com www.seslisohbet.com;
        
        # www -> non-www yönlendirmesi
        if ($host = www.seslisohbet.com) {
            return 301 https://seslisohbet.com$request_uri;
        }
        
        # SSL sertifikaları
        ssl_certificate /etc/letsencrypt/live/seslisohbet.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/seslisohbet.com/privkey.pem;
        
        # SSL ayarları
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Güvenlik başlıkları
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https://cdn.seslisohbet.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https://api.seslisohbet.com https://socket.seslisohbet.com https://mediasoup.seslisohbet.com; media-src 'self' blob: https://cdn.seslisohbet.com; object-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self'; manifest-src 'self'" always;
        
        # Kök dizin
        root /var/www/seslisohbet.com;
        index index.html;
        
        # Statik dosyalar
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf|mp3|mp4|webm|ogg|pdf)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
            try_files $uri =404;
        }
        
        # Service Worker
        location /sw.js {
            add_header Cache-Control "no-cache";
            try_files $uri =404;
        }
        
        # Manifest
        location /manifest.json {
            add_header Cache-Control "no-cache";
            try_files $uri =404;
        }
        
        # HTML dosyaları
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache";
        }
    }
}
